<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>edelphi</artifactId>
  <packaging>war</packaging>
  <name>eDelfoi is a research program based on Delphi expert method.</name>
  <description>eDelfoi is a research program based on Delphi expert method. It is developed in co-operation with Future Research Center of Turku School of Economics.

Delphi technique is used for bringing values, new viewpoints and ideas as a foundation for planning and decision making, i.e. making qualitative research. The program can also be used for making a simple, Survey-type of query. The newest version of the program is called eDelfoi.  </description>

  <parent>
    <groupId>fi.internetix.edelphi</groupId>
    <artifactId>parent</artifactId>
    <version>1.0.11</version>    
    <relativePath>../pom.xml</relativePath>
  </parent>
  
  <dependencies>
    <!-- JavaEE 6.0 API -->
    
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- JBoss provided -->
 
    <!-- Import the CDI API, we use provided scope as the API is included  in JBoss AS 7 -->
    <dependency>
       <groupId>javax.enterprise</groupId>
       <artifactId>cdi-api</artifactId>
       <scope>provided</scope>
    </dependency>

    <!-- Import the Common Annotations API (JSR-250), we use provided scope as the API is included in JBoss AS 7 -->
    <dependency>
       <groupId>org.jboss.spec.javax.annotation</groupId>
       <artifactId>jboss-annotations-api_1.1_spec</artifactId>
       <scope>provided</scope>
    </dependency>

    <!-- Import the JPA API, we use provided scope as the API is included in JBoss AS 7 -->
    <dependency>
       <groupId>org.hibernate.javax.persistence</groupId>
       <artifactId>hibernate-jpa-2.0-api</artifactId>
       <scope>provided</scope>
    </dependency>

    <!-- Hibernate -->
    <dependency>
       <groupId>org.hibernate</groupId>
       <artifactId>hibernate-core</artifactId>
       <scope>provided</scope>
    </dependency>    
   
    <dependency>
      <groupId>org.hibernate.common</groupId>
      <artifactId>hibernate-commons-annotations</artifactId>
      <scope>provided</scope>
    </dependency>
   
    <!-- Import the EJB API, we use provided scope as the API is included in JBoss AS 7 -->
    <dependency>
       <groupId>org.jboss.spec.javax.ejb</groupId>
       <artifactId>jboss-ejb-api_3.1_spec</artifactId>
       <scope>provided</scope>
    </dependency>

    <!-- Hibernate Validator is shipped in JBoss AS 7 -->
    <dependency>
       <groupId>org.hibernate</groupId>
       <artifactId>hibernate-validator</artifactId>
       <scope>provided</scope>
       <exclusions>
          <exclusion>
             <groupId>org.slf4j</groupId>
             <artifactId>slf4j-api</artifactId>
          </exclusion>
       </exclusions>
    </dependency>

    <!-- Annotation processor to generate the JPA 2.0 metamodel classes  for typesafe criteria queries -->
    <dependency>
       <groupId>org.hibernate</groupId>
       <artifactId>hibernate-jpamodelgen</artifactId>
       <scope>provided</scope>
    </dependency>  
   
    <!-- JSTL -->
    <dependency>
      <groupId>org.jboss.spec.javax.servlet.jstl</groupId>
      <artifactId>jboss-jstl-api_1.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- eDelphi -->

  	<dependency>
		<groupId>fi.internetix.edelphi</groupId>
		<artifactId>persistence</artifactId>
		<version>${project.version}</version>
		<type>jar</type>
		<scope>compile</scope>
		<exclusions>
			<exclusion>
				<artifactId>guava</artifactId>
				<groupId>com.google.guava</groupId>
			</exclusion>
		</exclusions>
  	</dependency>
  	
  	<!-- SMVCJ -->
  	
  	<dependency>
  		<groupId>fi.internetix.smvcj</groupId>
  		<artifactId>smvcj</artifactId>
  		<type>jar</type>
  		<scope>compile</scope>
  	</dependency>
  	
  	<!-- CSS Parser -->
  	
  	<dependency>
  		<groupId>net.sourceforge.cssparser</groupId>
  		<artifactId>cssparser</artifactId>
  		<type>jar</type>
  		<scope>compile</scope>
  	</dependency>
  	
 	<!-- OpenID -->
  	
    <dependency>
      <groupId>org.openid4java</groupId>
      <artifactId>openid4java-consumer</artifactId>
      <type>pom</type>
      <scope>compile</scope>
      <exclusions>
      	<exclusion>
      		<artifactId>xercesImpl</artifactId>
      		<groupId>xerces</groupId>
      	</exclusion>
      </exclusions>
    </dependency>

    <!-- OAuth -->  
     
    <dependency>
    	<groupId>org.scribe</groupId>
    	<artifactId>scribe</artifactId>
    </dependency>
    
    <!-- Apache Commons -->
    
    <dependency>
    	<groupId>commons-codec</groupId>
    	<artifactId>commons-codec</artifactId>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
     
    <!-- Google Drive API -->

    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-drive</artifactId>
    </dependency>

    <!-- CSV -->

    <dependency>
        <groupId>net.sourceforge.javacsv</groupId>
        <artifactId>javacsv</artifactId>
        <type>jar</type>
        <scope>compile</scope>
    </dependency>
    
    <!-- BIRT -->
    
    <dependency>
    	<groupId>org.apache.xmlgraphics</groupId>
    	<artifactId>batik-bridge</artifactId>
    	<type>jar</type>
    	<scope>compile</scope>
    	<exclusions>
    		<exclusion>
    			<artifactId>xml-apis</artifactId>
    			<groupId>xml-apis</groupId>
    		</exclusion>
    	</exclusions>
    </dependency>
    <dependency>
    	<groupId>org.eclipse.birt.chart</groupId>
    	<artifactId>engine</artifactId>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>org.eclipse.birt.chart</groupId>
    	<artifactId>engine-extension</artifactId>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>org.eclipse.birt</groupId>
    	<artifactId>core</artifactId>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>org.eclipse.birt.chart</groupId>
    	<artifactId>device-extension</artifactId>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>org.eclipse.birt.chart</groupId>
    	<artifactId>examples-core</artifactId>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>org.eclipse.emf</groupId>
    	<artifactId>ecore</artifactId>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>org.eclipse.emf</groupId>
    	<artifactId>ecore-xmi</artifactId>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>org.eclipse.emf</groupId>
    	<artifactId>common</artifactId>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>com.ibm.icu</groupId>
    	<artifactId>icu4j</artifactId>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>org.eclipse.core</groupId>
    	<artifactId>runtime</artifactId>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.jtidy</groupId>
      <artifactId>jtidy</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.birt.chart</groupId>
      <artifactId>device-svg</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.birt.chart</groupId>
      <artifactId>device-pdf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.xhtmlrenderer</groupId>
      <artifactId>core-renderer</artifactId>
    </dependency>
    <dependency>
      <groupId>dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <scope>provided</scope>
      <exclusions>
      	<exclusion>
      		<artifactId>xml-apis</artifactId>
      		<groupId>xml-apis</groupId>
      	</exclusion>
      </exclusions>
    </dependency>
    <dependency>
    	<groupId>com.google.http-client</groupId>
    	<artifactId>google-http-client-jackson</artifactId>
    </dependency>
    <dependency>
  	  <groupId>org.codehaus.groovy.modules.http-builder</groupId>
	  <artifactId>http-builder</artifactId>
    </dependency>
    <dependency>
    	<groupId>hanjava.net</groupId>
    	<artifactId>svg2emf</artifactId>
        <exclusions>
	      <exclusion>
	        <artifactId>xercesImpl</artifactId>
	      	<groupId>xerces</groupId>
	      </exclusion>
	    </exclusions>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.1.2</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>            
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.2</version>
      </plugin>
    </plugins>
  </build>
  
</project>
