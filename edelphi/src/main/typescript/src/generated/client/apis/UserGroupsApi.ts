/* tslint:disable */
/* eslint-disable */
/**
 * eDelphi REST API
 * REST API for eDelphi
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ErrorResponse,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    PanelUserGroup,
    PanelUserGroupFromJSON,
    PanelUserGroupToJSON,
} from '../models';

export interface ListUserGroupsRequest {
    panelId: number;
}

/**
 * 
 */
export class UserGroupsApi extends runtime.BaseAPI {

    /**
     * List defined user groups from a panel
     * List panel user groups
     */
    async listUserGroupsRaw(requestParameters: ListUserGroupsRequest): Promise<runtime.ApiResponse<Array<PanelUserGroup>>> {
        if (requestParameters.panelId === null || requestParameters.panelId === undefined) {
            throw new runtime.RequiredError('panelId','Required parameter requestParameters.panelId was null or undefined when calling listUserGroups.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // bearer authentication
        }

        const response = await this.request({
            path: `/panels/{panelId}/userGroups`.replace(`{${"panelId"}}`, encodeURIComponent(String(requestParameters.panelId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(PanelUserGroupFromJSON));
    }

    /**
     * List defined user groups from a panel
     * List panel user groups
     */
    async listUserGroups(requestParameters: ListUserGroupsRequest): Promise<Array<PanelUserGroup>> {
        const response = await this.listUserGroupsRaw(requestParameters);
        return await response.value();
    }

}
