/* tslint:disable */
/* eslint-disable */
/**
 * eDelphi REST API
 * REST API for eDelphi
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReportRequestOptions
 */
export interface ReportRequestOptions {
    /**
     * Include only speficied page ids
     * @type {Array<number>}
     * @memberof ReportRequestOptions
     */
    queryPageIds?: Array<number>;
    /**
     * Include only speficied expertise group ids
     * @type {Array<number>}
     * @memberof ReportRequestOptions
     */
    expertiseGroupIds?: Array<number>;
    /**
     * Include only speficied panel user group ids
     * @type {Array<number>}
     * @memberof ReportRequestOptions
     */
    panelUserGroupIds?: Array<number>;
    /**
     * Include only comments from speficied comment category ids
     * @type {Array<number>}
     * @memberof ReportRequestOptions
     */
    commentCategoryIds?: Array<number>;
    /**
     * Show 2d answers as 1d graphs instead of 2d graphs
     * @type {boolean}
     * @memberof ReportRequestOptions
     */
    show2dAs1d?: boolean;
}

export function ReportRequestOptionsFromJSON(json: any): ReportRequestOptions {
    return ReportRequestOptionsFromJSONTyped(json, false);
}

export function ReportRequestOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportRequestOptions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'queryPageIds': !exists(json, 'queryPageIds') ? undefined : json['queryPageIds'],
        'expertiseGroupIds': !exists(json, 'expertiseGroupIds') ? undefined : json['expertiseGroupIds'],
        'panelUserGroupIds': !exists(json, 'panelUserGroupIds') ? undefined : json['panelUserGroupIds'],
        'commentCategoryIds': !exists(json, 'commentCategoryIds') ? undefined : json['commentCategoryIds'],
        'show2dAs1d': !exists(json, 'show2dAs1d') ? undefined : json['show2dAs1d'],
    };
}

export function ReportRequestOptionsToJSON(value?: ReportRequestOptions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'queryPageIds': value.queryPageIds,
        'expertiseGroupIds': value.expertiseGroupIds,
        'panelUserGroupIds': value.panelUserGroupIds,
        'commentCategoryIds': value.commentCategoryIds,
        'show2dAs1d': value.show2dAs1d,
    };
}


