// tslint:disable
// eslint-disable
/**
 * eDelphi REST API
 * REST API for eDelphi
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ErrorResponse,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    ReportRequest,
    ReportRequestFromJSON,
    ReportRequestToJSON,
} from '../models';

export interface CreateReportRequestRequest {
    reportRequest: ReportRequest;
}

/**
 * no description
 */
export class ReportsApi extends runtime.BaseAPI {

    /**
     * Creates a request to generate a report
     * Creates a report request
     */
    async createReportRequestRaw(requestParameters: CreateReportRequestRequest): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.reportRequest === null || requestParameters.reportRequest === undefined) {
            throw new runtime.RequiredError('reportRequest','Required parameter requestParameters.reportRequest was null or undefined when calling createReportRequest.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // bearer authentication
        }

        const response = await this.request({
            path: `/reportRequests`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ReportRequestToJSON(requestParameters.reportRequest),
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Creates a request to generate a report
     * Creates a report request
     */
    async createReportRequest(requestParameters: CreateReportRequestRequest): Promise<void> {
        await this.createReportRequestRaw(requestParameters);
    }

}
