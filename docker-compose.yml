version: "3"
services:
  mysql:
    image: mysql:8
    platform: linux/amd64
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - 3306:3306
    command: --lower_case_table_names=1
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: edelphi
      MYSQL_USER: edelphi      
      MYSQL_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root --password=root"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - edelphi

  edelphi:
    hostname: ${HOST}
    build: .
    platform: linux/amd64
    ports:
      - 8081:8080
      - 8787:8787
    volumes:
      - ./google-service-account.json:/opt/google-service-account.json
    depends_on:
      - mysql
    environment:
      HOST: ${HOST}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      CLUSTER_PASSWORD: ${CLUSTER_PASSWORD}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_RESOURCE: ${KEYCLOAK_RESOURCE}
      KEYCLOAK_SECRET: ${KEYCLOAK_SECRET}
      KEYCLOAK_URL: ${KEYCLOAK_URL}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_TLS: ${SMTP_TLS}
      KUBERNETES_NAMESPACE: ${KUBERNETES_NAMESPACE}
      JAVA_OPTS: ${JAVA_OPTS}
      CONTACT_EMAIL: ${CONTACT_EMAIL}
      WILDFLY_EXTRA_OPTS: ${WILDFLY_EXTRA_OPTS}
      OVERRIDE_REPORTS_URL: ${OVERRIDE_REPORTS_URL}
      SAVE_REPORTS_ON_DISK: ${SAVE_REPORTS_ON_DISK}
      GOOGLE_PICKER_API_KEY: ${GOOGLE_PICKER_API_KEY}
    networks:
      - edelphi

  nginx:
    hostname: ${HOST}
    image: nginx:alpine
    ports:
      - 443:443
      - 80:80
    volumes:
      - ./nginx-dev/sites.conf:/etc/nginx/conf.d/sites.conf:ro
      - ./nginx-dev/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - edelphi
      - keycloak
    networks:
      edelphi:
        aliases:
          - dev.edelphi.org
          - dev-auth.edelphi.org

  keycloak:
    # image: quay.io/keycloak/keycloak:21.1
    command:
      - start-dev
    build:
      context: ../edelphi-keycloak
      dockerfile: Dockerfile
    container_name: keycloak
    hostname: dev-auth.edelphi.org
    ports:
      - 8080:8080
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      KC_DB_URL: jdbc:mysql://mysql:3306/keycloak?useSSL=false&allowPublicKeyRetrieval=true&zeroDateTimeBehavior=convertToNull
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: root
      KC_PROXY_HEADERS: xforwarded
    networks:
      - edelphi

networks:
  edelphi:
volumes:
  db_data: {}
