<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>rest</artifactId>
  <packaging>war</packaging>  
  <name>${project.groupId}:${project.artifactId}</name>
  <description>REST services for eDelphi</description>
  <url>https://github.com/Metatavu/edelphi</url>  

  <parent>
    <groupId>fi.metatavu.edelphi</groupId>
    <artifactId>parent</artifactId>
    <version>1.2.0-SNAPSHOT</version>    
    <relativePath>../pom.xml</relativePath>
  </parent>
  
  <licenses>
    <license>
      <name>GNU LGPL v3</name>
      <url>http://www.gnu.org/licenses/lgpl.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/Metatavu/edelphi/issues</url>
  </issueManagement>
  
  <scm>
    <developerConnection>scm:git:git@github.com:Metatavu/edelphi.git</developerConnection>
    <url>git@github.com:Metatavu/edelphi.git</url>
    <connection>scm:git:git@github.com:Metatavu/edelphi.git</connection>
    <tag>1.1.0</tag>
  </scm>
  
  <organization>
    <name>Metatavu Oy</name>
    <url>https://metatavu.fi</url>
  </organization>
  
  <developers>
    <developer>
      <email>devs@metatavu.fi</email>
      <name>Metatavu Oy</name>
      <organization>Metatavu Oy</organization>
      <organizationUrl>https://www.metatavu.fi</organizationUrl>
    </developer>    
  </developers>

  <properties>
    <!-- Maven -->

    <maven.javadoc.skip>true</maven.javadoc.skip>
        
    <!-- Keycloak -->
    
    <keycloak.version>9.0.3</keycloak.version>
    
    <!-- OpenAPI -->
    
    <openapitools.jackson-databind-nullable.version>0.2.0</openapitools.jackson-databind-nullable.version>
    
    <!-- Test -->
    
    <jaxrs-functional-test-builder.version>1.0.4</jaxrs-functional-test-builder.version>
    <jsonassert.version>1.5.0</jsonassert.version>
    <rest-assured.version>4.1.2</rest-assured.version>

    <feign-version>9.4.0</feign-version>
    <feign-form-version>2.1.0</feign-form-version>

  </properties>
  
  <dependencies>
    
    <!-- Batch -->
    
    <dependency>
      <groupId>org.jboss.spec.javax.batch</groupId>
      <artifactId>jboss-batch-api_1.0_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jberet</groupId>
      <artifactId>jberet-core</artifactId>
      <scope>provided</scope>
    </dependency>
  
    <!-- Transactions -->
    
    <dependency>
      <groupId>org.jboss.spec.javax.transaction</groupId>
      <artifactId>jboss-transaction-api_1.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jboss.spec.javax.servlet</groupId>
      <artifactId>jboss-servlet-api_4.0_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jboss.spec.javax.servlet.jsp</groupId>
      <artifactId>jboss-jsp-api_2.3_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.wildfly</groupId>
      <artifactId>wildfly-ejb3</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jboss.spec.javax.ws.rs</groupId>
      <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>fi.metatavu.edelphi</groupId>
      <artifactId>persistence</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-lang3</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>fi.metatavu.edelphi</groupId>
      <artifactId>common-cdi</artifactId>
      <version>${project.version}</version>
    </dependency>
    
    <dependency>
      <groupId>fi.metatavu.edelphi</groupId>
      <artifactId>reports</artifactId>
      <version>${project.version}</version>
    </dependency>
    
    <dependency>
      <groupId>fi.metatavu.edelphi</groupId>
      <artifactId>common-cdi</artifactId>
      <version>${project.version}</version>
    </dependency>
    
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <scope>provided</scope>
    </dependency>
        
    <dependency>
      <groupId>xalan</groupId>
      <artifactId>xalan</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.eclipse.paho</groupId>
      <artifactId>org.eclipse.paho.client.mqttv3</artifactId>
    </dependency>
    
    <!-- OpenAPI tools -->
    
    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
      <version>${openapitools.jackson-databind-nullable.version}</version>
    </dependency>

    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-annotations</artifactId>
      <version>1.5.3</version>
    </dependency>
    
    <!-- HTTP client: Netflix Feign -->
    <dependency>
        <groupId>io.github.openfeign</groupId>
        <artifactId>feign-core</artifactId>
        <version>${feign-version}</version>
    </dependency>
    <dependency>
        <groupId>io.github.openfeign</groupId>
        <artifactId>feign-jackson</artifactId>
        <version>${feign-version}</version>
    </dependency>
    <dependency>
        <groupId>io.github.openfeign</groupId>
        <artifactId>feign-slf4j</artifactId>
        <version>${feign-version}</version>
    </dependency>
    <dependency>
        <groupId>io.github.openfeign.form</groupId>
        <artifactId>feign-form</artifactId>
        <version>${feign-form-version}</version>
    </dependency>
    
    <!-- Keycloak -->

    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-core</artifactId>
      <version>${keycloak.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-adapter-spi</artifactId>
      <version>${keycloak.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-adapter-core</artifactId>
      <version>${keycloak.version}</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-authz-client</artifactId>
      <version>${keycloak.version}</version>
      <scope>provided</scope>
    </dependency>
    
    <!-- Test -->
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <artifactId>jaxrs-functional-test-builder</artifactId>
      <groupId>fi.metatavu.jaxrs.testbuilder</groupId>
      <version>${jaxrs-functional-test-builder.version}</version>
    </dependency>
    
    <dependency>
      <groupId>org.skyscreamer</groupId>
      <artifactId>jsonassert</artifactId>
      <version>${jsonassert.version}</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
      <version>${rest-assured.version}</version>
    </dependency>
    
  </dependencies>
  
  <build>
    <plugins>
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>4.2.0</version>
        <executions>
          <execution>
            <id>openapi-generate-jaxrs-spec</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/../rest-spec/swagger.yaml</inputSpec>
              <generatorName>jaxrs-spec</generatorName>
              <configOptions>
                <sourceFolder>src/gen/java/main</sourceFolder>'
                <dateLibrary>java8</dateLibrary>
                <java8>true</java8>
                <interfaceOnly>true</interfaceOnly>
                <apiPackage>fi.metatavu.edelphi.rest.api</apiPackage>
                <modelPackage>fi.metatavu.edelphi.rest.model</modelPackage>
                <returnResponse>true</returnResponse>
                <useSwaggerAnnotations>false</useSwaggerAnnotations>
              </configOptions>
            </configuration>
          </execution>
          
          <execution>
            <id>openapi-generate-java-client</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/../rest-spec/swagger.yaml</inputSpec>
              <generatorName>java</generatorName>
              <configOptions>
                <sourceFolder>src/gen/java/main</sourceFolder>
                <library>feign</library>
                <dateLibrary>java8</dateLibrary>
                <java8>true</java8>
                <invokerPackage>fi.metatavu.edelphi.rest.client</invokerPackage>
                <useSwaggerAnnotations>false</useSwaggerAnnotations>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  
   <profiles>
    <profile>
      <id>itests</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <!-- Server running mode -->

        <runmode>TEST</runmode>        

        <!-- Test properties -->
  
        <it.port.http>1234</it.port.http>
        <it.host>localhost</it.host>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <images>
                <image>
                  <name>mysql:5.6</name>
                  <alias>test-edelphi-mysql</alias>
                  <run>
                    <ports>
                      <port>3306:3306 </port>
                    </ports>
                    <env>
                      <MYSQL_ROOT_PASSWORD>rootpass</MYSQL_ROOT_PASSWORD>
                      <MYSQL_DATABASE>edelphidb</MYSQL_DATABASE>
                      <MYSQL_USER>edelphiuser</MYSQL_USER>
                      <MYSQL_PASSWORD>edelphipass</MYSQL_PASSWORD>
                    </env>
                    <wait>
                      <log>ready for connections.</log>
                    </wait>
                    <cmd>--lower_case_table_names=1</cmd>
                  </run>
                </image>
                <image>
                  <name>jboss/keycloak:${keycloak.version}</name>
                  <alias>test-edelphi-keycloak</alias>
                  <run>
                    <env>
                      <KEYCLOAK_USER>admin</KEYCLOAK_USER>
                      <KEYCLOAK_PASSWORD>admin</KEYCLOAK_PASSWORD>
                      <KEYCLOAK_IMPORT>/opt/docker/kc.json</KEYCLOAK_IMPORT>
                      <KEYCLOAK_LOGLEVEL>INFO</KEYCLOAK_LOGLEVEL>
                      <ROOT_LOGLEVEL>INFO</ROOT_LOGLEVEL>
                    </env>
                    <volumes>
                      <bind>
                        <volume>${project.basedir}/test-volumes/keycloak:/opt/docker</volume>
                      </bind>
                    </volumes>
                    <ports>
                      <port>8080:8080</port>
                    </ports>
                    <wait>
                      <log>Resuming server</log>
                      <time>120000</time>
                    </wait>
                  </run>
                </image>
                <image>
                  <name>test-edelphi-api</name>
                  <build>
                    <dockerFileDir>${project.basedir}</dockerFileDir>
                    <filter>@</filter>
                  </build>
                  <run>
                    <ports>
                      <port>1234:8080</port>
                    </ports>
                    <links> 
                      <link>test-edelphi-mysql:test-edelphi-mysql</link>
                      <link>test-edelphi-keycloak:test-edelphi-keycloak</link>
                    </links>                    
                    <env>
                      <runmode>TEST</runmode>
                    
                      <HOST>localhost</HOST>
                      <CLUSTER_PASSWORD>clusterpass</CLUSTER_PASSWORD>
                      <DB_HOST>test-edelphi-mysql</DB_HOST>
                      <DB_PORT>3306</DB_PORT>
                      <DB_NAME>edelphidb</DB_NAME>
                      <DB_USERNAME>root</DB_USERNAME>
                      <DB_PASSWORD>rootpass</DB_PASSWORD>
                      <KUBERNETES_NAMESPACE>test</KUBERNETES_NAMESPACE>
                      
                      <KEYCLOAK_REALM>edelphi</KEYCLOAK_REALM>
                      <KEYCLOAK_RESOURCE>api</KEYCLOAK_RESOURCE>
                      <KEYCLOAK_URL>http://test-edelphi-keycloak:8080/auth</KEYCLOAK_URL>
                      <KEYCLOAK_SECRET>76f6739f-6fe7-478a-b8f4-2d9ddd98ec5c</KEYCLOAK_SECRET>
                      
                      <SMTP_TLS>false</SMTP_TLS>
                      <SMTP_USERNAME>fake</SMTP_USERNAME>
                      <SMTP_PASSWORD>false</SMTP_PASSWORD>
                      <SMTP_HOST>localhost</SMTP_HOST>
                      <SMTP_PORT>25</SMTP_PORT>
                    </env>
                  </run>
                </image>
              </images>
              <showLogs>true</showLogs>
            </configuration>
            <executions>
              <execution>
                <id>docker-test-edelphi-api-build</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
              <execution>
                <id>docker-test-edelphi-api-start</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>docker-test-edelphi-api-stop</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>    
          
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>wait-maven-plugin</artifactId>
            <version>1.0</version>
            <executions>
              <execution>
                <id>wait</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>wait</goal>
                </goals>      
                <configuration>
                  <protocol>http</protocol>
                  <host>localhost</host>
                  <port>1234</port>
                  <file>/v1/system/ping</file>
                  <maxcount>20</maxcount>
                  <timeout>10000</timeout>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>3.0.0-M3</version>
            <configuration>
              <failIfNoTests>true</failIfNoTests>
              <skipAfterFailureCount>1</skipAfterFailureCount>
              <argLine>-Xmx2G</argLine>
              <includes>
                <include>${it.tests}</include>
              </includes>
              <systemPropertyVariables>
                <java.util.logging.config.file>${project.basedir}/src/test/resources/logging.properties</java.util.logging.config.file>
                <jboss.home>${wildfly.home}</jboss.home>
                <module.path>${wildfly.home}/modules</module.path>
                <it.host>${it.host}</it.host>
                <it.port.http>${it.port.http}</it.port.http>
              </systemPropertyVariables>
            </configuration>
            <executions>
              <execution>
                <id>integration-test</id>
                <goals>
                  <goal>integration-test</goal>
                </goals>
              </execution>
              <execution>
                <id>verify</id>
                <goals>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

        </plugins>

      </build>
    </profile>  
  </profiles>
  
</project>
